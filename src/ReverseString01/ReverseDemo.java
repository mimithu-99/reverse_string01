package ReverseString01;

public class ReverseDemo {
    public static void main(String[] args) {

        String s = "Rahul";
        String t = "";
        for (int i = s.length() -1; i >= 0 ; i--) {
            //System.out.println(s.charAt(i));
            t = t + s.charAt(i);
        }
        System.out.println(t);
    }
}
/*
public class ReverseDemo {
    public static void main(String[] args) {
        String s = "Rahul"; // একটি স্ট্রিং ভেরিয়েবল 's' তৈরি করা হয়েছে এবং এর মান "Rahul" রাখা হয়েছে।
        String t = ""; // একটি খালি স্ট্রিং ভেরিয়েবল 't' তৈরি করা হয়েছে।

        for (int i = s.length() - 1; i >= 0 ; i--) { // এটি একটি for লুপ, যা স্ট্রিং 's' এর শেষ থেকে শুরু করে প্রথম ক্যারেক্টারে পর্যন্ত প্রতিটি ক্যারেক্টারকে উল্টো করে নিয়ে যায়।
            t = t + s.charAt(i); // স্ট্রিং 's' এর ইনডেক্স 'i' এর ক্যারেক্টারটি 't' স্ট্রিংএর শেষে যোগ করা হয়।
        }

        System.out.println(t); // সম্পূর্ণ উল্টো করা স্ট্রিং 't' কে প্রিন্ট করা হয়।
    }
}
বিস্তারিত ব্যাখ্যা:
public class ReverseDemo { - এটি একটি পাবলিক ক্লাস ReverseDemo ঘোষণা করছে।

public static void main(String[] args) { - এটি মেইন মেথড যা প্রোগ্রাম চালানোর জন্য ব্যবহৃত হয়।

String s = "Rahul"; - একটি স্ট্রিং ভেরিয়েবল s তৈরি করা হয় এবং এর মান "Rahul" রাখা হয়েছে।

String t = ""; - একটি খালি স্ট্রিং ভেরিয়েবল t তৈরি করা হয়।

for (int i = s.length() - 1; i >= 0 ; i--) { - এটি একটি for লুপ, যা s স্ট্রিং এর শেষ থেকে শুরু করে প্রথম ক্যারেক্টারে পর্যন্ত প্রতিটি ক্যারেক্টারকে উল্টো করে নিয়ে যায়।

s.length() - 1 মানে s স্ট্রিং এর শেষ ইনডেক্স (উদাহরণ: "Rahul" এর জন্য 4 কারণ ইনডেক্স 0 থেকে শুরু হয়)।
i >= 0 মানে লুপটি চলতে থাকবে যতক্ষণ পর্যন্ত i 0 বা এর বেশি থাকে।
i-- মানে প্রতিবার লুপ চালানোর পর i ১ করে কমিয়ে দেয়।
t = t + s.charAt(i); - এই লাইনে স্ট্রিং s এর বর্তমান ইনডেক্স i এর ক্যারেক্টারটি স্ট্রিং t এর শেষে যোগ করা হয়।

System.out.println(t); - সম্পূর্ণ উল্টো করা স্ট্রিং t কে প্রিন্ট করা হয়।

আউটপুট:

luhaR
এই কোডটি "Rahul" স্ট্রিংটি উল্টো করে "luhaR" আউটপুট দেয়।

আশা করি, এই বিস্তারিত ব্যাখ্যা তোমার জন্য কোডটি বুঝতে সহায়ক হবে!
 */

/*
public class ReverseDemo {
    public static void main(String[] args) {
        String s = "Rahul"; // এই লাইনে "Rahul" স্ট্রিংটি রাখা হয়েছে ভেরিয়েবল 's' এ।
        String t = ""; // এই লাইনে খালি স্ট্রিংটি রাখা হয়েছে ভেরিয়েবল 't' এ।

        // লুপ যা স্ট্রিং 's' কে উল্টো করে স্ট্রিং 't' তে রাখবে
        for (int i = s.length() - 1; i >= 0 ; i--) {
            t = t + s.charAt(i); // প্রতিটি পজিশনের ক্যারেক্টার স্ট্রিং 's' থেকে নিয়ে স্ট্রিং 't' এর শেষে যোগ করা হচ্ছে
        }

        System.out.println(t); // প্রিন্ট করা হচ্ছে উল্টো করা স্ট্রিং 't'
    }
}
বিস্তারিত ব্যাখ্যা:
String s = "Rahul"; - এই লাইনে "Rahul" স্ট্রিংটি ভেরিয়েবল s এ সংরক্ষিত হয়েছে।

String t = ""; - এই লাইনে খালি স্ট্রিং ভেরিয়েবল t তৈরি করা হয়েছে। এটি পরের লুপের মাধ্যমে উল্টো করা স্ট্রিং সংরক্ষণের জন্য ব্যবহৃত হবে।

for (int i = s.length() - 1; i >= 0 ; i--) { - এই for লুপটি স্ট্রিং s এর শেষ ক্যারেক্টার থেকে শুরু করে প্রথম ক্যারেক্টারে পর্যন্ত প্রতিটি ক্যারেক্টার উল্টো করে স্ট্রিং t তে রাখবে।

i = s.length() - 1 স্ট্রিং s এর শেষ ক্যারেক্টারের ইনডেক্স থেকে লুপটি শুরু হয়।
i >= 0 লুপটি চলতে থাকবে যতক্ষণ পর্যন্ত i এর মান 0 এবা তার বেশি থাকে।
i-- প্রতিবার লুপ চালানোর পরে i এর মান এক কমিয়ে যাবে।
t = t + s.charAt(i); - প্রতিবার লুপ চালানোর সময়, স্ট্রিং s এর ইনডেক্স i এর ক্যারেক্টারটি স্ট্রিং t এর শেষে যোগ করা হয়। এটি স্ট্রিং s কে উল্টো করার কাজ সম্পাদন করে।

System.out.println(t); - এই লাইনে উল্টো করা স্ট্রিং t প্রিন্ট করা হয়। এটি যে উল্টো করা "luhaR" আউটপুট দেয়।

এই ভাবে প্রোগ্রামটি স্ট্রিং কে উল্টো করে দেখানোর জন্য একটি সহজ উদাহরণ প্রদান করা হয়েছে। প্রোগ্রামের প্রতিটি অংশ সহজ ভাষায় বর্ণিত করা হয়েছে যাতে একজন নতুন প্রোগ্রামার এটি সহজেই বুঝতে পারেন।







 */